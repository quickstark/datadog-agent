##########################################
## System Probe Configuration          ##
##                                      ##
## SYNOLOGY-COMPATIBLE VERSION          ##
## All system probe features disabled   ##
##########################################

# IMPORTANT: This configuration disables all system probe features to prevent
# container lock-up issues on Synology NAS systems. System probe requires
# kernel debug access (/sys/kernel/debug) and eBPF that conflicts with
# Synology's custom kernel.

runtime_security_config:
  ## @param enabled - boolean - optional - default: false
  ## DISABLED for Synology compatibility - prevents eBPF kernel hooks
  ## that cause container namespace corruption
  #
  enabled: false

system_probe_config:
  ## @param enabled - boolean - optional - default: false  
  ## DISABLED for Synology compatibility - prevents kernel debug access
  ## that causes unkillable containers
  #
  enabled: false
  
  ## System probe settings are commented out for Synology compatibility
  ## These features require /sys/kernel/debug mount and kernel modules
  ## that are not compatible with Synology's Docker implementation
  #
  # sysprobe_socket: /opt/datadog-agent/run/sysprobe.sock
  # log_level: info
  # debug_port: 0

network_config:
  ## @param enabled - boolean - optional - default: false
  ## DISABLED for Synology compatibility - prevents network namespace issues
  #
  enabled: false
  
  ## Network monitoring settings are commented out for Synology
  ## These require advanced kernel capabilities
  #
  # conntrack_max_state_size: 65536
  # conntrack_rate_limit: 500

# Note: To re-enable system probe on a standard Linux system:
# 1. Set runtime_security_config.enabled: true
# 2. Set system_probe_config.enabled: true  
# 3. Set network_config.enabled: true
# 4. Use Dockerfile instead of Dockerfile.synology
# 5. Add Docker volume mount: /sys/kernel/debug:/sys/kernel/debug
# 6. Add required capabilities: SYS_ADMIN, SYS_PTRACE, NET_ADMIN